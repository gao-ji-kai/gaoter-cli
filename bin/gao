#! /usr/bin/env node  用node环境去执行


console.log('gaoter-cli')  //npm link 会自动产生执行命令


// 1.配置可执行命令 commander 基于node的第三方模块
const program = require('commander')
const chalk = require('chalk')//相当于粉笔 能上颜色


//核心功能  1.创建项目   2.更改配置文件  3.UI界面 @vue/ui

const clearArgs = (cmd) => {//{force:true}
    const args = {};
    cmd.options.forEach(item => {
        const key = item.long.slice(2)
        if (cmd[key]) args[key] = item[key]
    })

    return args

}
//  万一重名  强制创建的模式
program
    .command('create <app-name>')
    .description('create a new project')
    .option['-f,--force', 'overwrite target directory if it exists']
    .action((name, cmd) => {
        // 调用create模块实现
        require('../lib/create.js')(name, clearArgs(cmd))

        console.log(name, clearArgs(cmd));//需要提取cmd中的属性
    })


// 配置相关的  vue config --set a=1  =>写到配置文件中   取值   vue config --get a  vue config -0
program
    .command('config [value]')//命令后面配置个参数
    .description('inspect and modify the config')
    .option('-g, --get <path>', 'get value from option')
    .option('-s, --set <path> <value')
    .option('-d, --delete <path>', 'delete option from cofig')//前面是简写
    .action((value, cmd) => {
        //config模块实现

        console.log(value, clearArgs(cmd));
    })

//UI界面
program
    .command('ui')
    .description('start and open gaoter-cli ui')
    .option('-p,--p <port>', 'post used for UI Server')
    .action((cmd) => {

        // 调用 UI模块实现

        console.log(clearArgs(cmd));
    })

//  -v 
program
    .name('gaoter-cli')
    .version(`gaoter-cli@${require('../package.json').version}`)
    .usage(`<command>[options]`)


//当用户打印帮助文档时干的事儿
program.on('--help', function (parmas) {
    console.log();
    console.log(`Run ${chalk.cyan(`gaoter-cli <command> --help`)}  show details`);
    console.log();

})
// 解析用户执行命令时传入的参数   例如  vue  create xxx
program.parse(process.argv)




// 2.要实现脚手架  先做一个命令行交互的功能  inquirer


// 3.将模板下载下来  download-git-repo



// 4.远程下载  根据用户的选择动态生成内容 metalsmith
